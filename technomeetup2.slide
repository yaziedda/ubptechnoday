Basic Programming and Database
Techno Meetup 2
27 Jan 2017

Divisi Pendidikan & RISTEK HIMATIF
Yazied DA

* Topik yang akan di bahas

- Apa itu pemograman?
- Pengenalan dasar di bahasa pemograman
- Pengenalan Database

* Apa itu pemograman?

Pemograman adalah proses menulis,menguji dan memperbaiki ( debug ), dan memelihara kode yang membangun sebuah program komputer.

* Bagaimana menulis dan membuat program?

- Text Editor
- Compiler

* Compiler 

Compiler adalah compiler / kompilator adalah adalah sebuah program komputer yang berguna untuk menerjemahkan program komputer yang ditulis dalam bahasa pemrograman tertentu menjadi program yang ditulis dalam bahasa pemrograman lain.

Arsitektur kompilator modern biasanya bukan lagi merupakan program tunggal namun merupakan rangkaian komunikasi antar program dengan tugas spesifik masing-masing. Program-program tersebut beserta tugasnya secara umum terdiri dari:

- Kompilator itu sendiri, yang menerima kode sumber dan menghasilkan bahasa tingkat rendah (assembly)
- Assembler, yang menerima keluaran kompilator dan menghasilkan berkas objek dalam bahasa mesin
- Linker, yang menerima berkas objek keluaran assembler untuk kemudian digabungkan dengan pustaka-pustaka yang diperlukan dan menghasilkan program yang dapat dieksekusi (executable)

* Compiler

.image image/compiler.png 500 _

* Pengenalan bahasa pemograman

Point untuk cepat mempelajari bahasa pemograman :

- Algoritma
- Print
- Type Data
- Statement
- Loop
- Array

* Algoritma

Algoritma adalah suatu urutan dari beberapa langkah yang logis guna menyelesaikan masalah.

* Print

php :

	echo "Hello world";

c++ :

	cout << "Hello world"; 

phyton :
	
	print("Hello world")

java :

	System.out.println("Hello world");

go :

	fmt.Println("Hello world")

* Type Data

Type Data adalah jenis nilai yang dapat ditampung oleh suatu variabel

Jenis Type Data yang umum :

- Integer ( Angka )
- String ( Huruf atau karakter )
- Boolean ( Pernyataan benar atau salah )

* Definisi Type Data 
PHP

	$angka = 123;
	$huruf = "huruf";
	$pernyataan = false;
C++

	int angka = 123;
	string huruf = "ini huruf";
	bool pernyataan = false;

Phyton

	angka = 123
	huruf = "ini huruf"
	pernyataan = false

* Definisi Type Data 

Java

	int angka = 123;
	String huruf = "ini huruf";
	boolean pernyataan = false;

	int angka;
	String huruf;
	boolean pernyataan;

	angka = 123;
	huruf = "ini huruf";
	pernyataan = true;

* Definisi Type Data 

GO

	angka := 123
	huruf := "Ini huruf"
	pernyataan := false

	var angka int64
	var huruf string
	var pernyataan bool

	angka = 123
	huruf = "ini huruf"
	pernyataan = false


* Statement
* Defisni
Statement adalah *tanggapan* *terhadap* *pernyataan*

Jenis - jenisnya :

- IF ELSE
- SWITCH CASE

* IF ELSE

* IF ELSE

PHP

	$angka = 1;

	if($angka == 1){
		do action
	}else{
		do action
	}

	if($angka == 1){
		do action
	}else if($angka == 2){
		do action
	}else{
		do action
	}

* IF ELSE

C++

	int angka = 1;

	if(angka == 1){
		do action
	}else{
		do action
	}

	if(angka == 1){
		do action
	}else if(angka == 2){
		do action
	}else{
		do action
	}
* IF ELSE
Phyton

	angka = 1

	if angka == 1:
		do action
	else:
		do action

	if angka == 1:
		do action
	elif angka == 2:
		do action
	elif angka == 3:
		do action

* IF ELSE
Java

	int angka = 1;

	if(angka == 1){
		do action
	}else{
		do action
	}

	if(angka == 1){
		do action
	}else if(angka == 2){
		do action
	}else{
		do action
	}
* IF ELSE
GO

	angka := 1

	if angka == 1 {
		do action
	}else {
		do action
	}

	if angka == 1 {
		do action
	}else if angka == 2{
		do action
	}else {
		do action
	}

* SWITCH CASE
* SWITCH CASE

PHP

	$angka = 1;

	switch ($angka){
		case 1:
			do action
			break;
		case 2:
			do action
			break;
		default:
			do action
			break;
	}

* SWITCH CASE

C++

	int angka = 1;

	switch (angka){
		case 1:
			do action
			break;
		case 2:
			do action
			break;
		default:
			do action
			break;
	}
* SWITCH CASE
Phyton

Doesn't have switch case

The official answer says, "You can do this easily enough with a sequence of if... elif... elif... else". And that you can use dictionary mapping for functions and dispatch methods for classes.

	def numbers_to_strings(argument):
		
		switcher = {
			0: "zero",
			1: "one",
			2: "two",
		}

		return switcher.get(argument, "nothing")

* SWITCH CASE
Java

	int angka = 1;

	switch (angka){
		case 1:
			do action
			break;
		case 2:
			do action
			break;
		default:
			do action
			break;
	}

* SWITCH CASE
GO

	angka := 1

	switch angka {
		case 1:
			do action
			break;
		case 2:
			do action
			break;
		default:
			do action
			break;
	}

* Looping
* Looping 
Macam-macam looping

- while
- do...while
- for
- foreach
* Looping

PHP

	for ($i = 0; $i <= 10; $i++) {
		echo "nomor ke : $i <br>";
	}

* Looping

C++

	for( int a = 0; a < 10; a = a + 1 ) {
		cout << "nomor ke : " << a << endl;
	}
* Looping
Phyton

	for i in range(0, 3):
		print "nomor ke %d" % (i)

* Looping
Java

	for(int i=0; i < 10; i++){
		System.out.println("nomor ke "+i)
	}

* Looping
GO

	for i := 0; i < 10; i++ {
		fmt.Println("nomor ke ", i)
	}

* Array
* Array

PHP

	$data = array("mobil", "motor", "sepeda");

	for ($i = 0; $i <= count($data); $i++) {
		echo "data kita : $data[$i] <br>";
	}

* Array

C++

	string data[3] = {"data 1", "data 2", "data 3"};

	for( int a = 0; a < 3; a = a + 1 ) {
		cout << "data ke : " << data[a]<< endl;
	}

* Array
Phyton

	data = ['data 1', 'data 2', 'data 3']

	for data in data:
		print "data ke :  %s" % data

* Array
Java

	String[] datanya = {"data 1", "data 2", "data 3"};

	for(int i=0; i < datanya.length; i++){
		System.out.println("cetak data ke "+datanya[i])
	}

* Array
GO

	data := [...]string{"data","data 2","data 3"}
	
	for i := 0; i < len(data); i++ {
		fmt.Println("datanya ", data[i])
	}
* Trend
.image ../image/trend.jpg 500 _
* Database
* Database
Database adalah kumpulan informasi yang disimpan di dalam komputer secara sistematik sehingga dapat diperiksa menggunakan suatu program komputer untuk memperoleh informasi dari basis data tersebut.

* Database
Saat ini database di bagi menjadi 2, SQL dan NoSQL :
.image ../image/sqlvnosql.png 500 _

* Database yang umum di gunakan
SQL Family
.image ../image/sql.jpg 300 _

* Database baru : NoSQL
.image ../image/nosql.png 500 _